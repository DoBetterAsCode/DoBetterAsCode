project_name: dobetterascode
containers:
  localstack:
    image: localstack/localstack
    ports:
      - 4572:4572
      - 8080:8080
    environment:
      SERVICES: s3
      DOCKER_HOST: unix:///var/run/docker.sock
      DEBUG: "1"
      PORT_WEB_UI: "8080"
    volumes:
      - /tmp/localstack:/tmp/localstack
  infra:
    build_directory: .batect/infra
    volumes:
      - ./:/code
    working_directory: /code
    environment:
      AWS_ACCESS_KEY_ID: ${AWS_ACCESS_KEY_ID:-}
      AWS_SECRET_ACCESS_KEY: ${AWS_SECRET_ACCESS_KEY:-}
      TF_TOKEN: ${TF_TOKEN:-}
      TF_OPERATION: ${TF_OPERATION:-apply}
      #TF_LOG: 1
  aws-cli:
    build_directory: .batect/aws
    volumes:
      - ./:/code
    working_directory: /code
    environment:
      AWS_ACCESS_KEY_ID: $AWS_ACCESS_KEY_ID
      AWS_SECRET_ACCESS_KEY: $AWS_SECRET_ACCESS_KEY   
  hugo:
    image: klakegg/hugo:0.55.6-ext
    volumes:
      - ./app:/code
    working_directory: /code
tasks:
  terraform-tflint:
    description: Run TFLint
    group: infra-lint
    run:
      container: infra
      command: /code/infra/modules/tflint.sh
      working_directory: /code/infra/modules
      environment:
        TF_VAR_env: test
        TERRAFORM_DIR: /code/infra/modules
  terraform-local-apply:
    description: Apply Terraform project with mock backend (localstack)
    group: infra-test
    dependencies:
      - localstack
    run:
      container: infra
      command: /code/infra/modules/test-local/local-apply.sh
      environment:
        TF_VAR_env: test
        TERRAFORM_DIR: /code/infra/modules/test-local
  terraform-unit-test:
    description: Apply Terraform test project
    group: infra-test
    run:
      container: infra
      command: /code/infra/modules/unit-test/unit-test.sh
      working_directory: /code/infra/modules/unit-test
      environment:
        TF_VAR_env: test
        TERRAFORM_DIR: /code/infra/modules/unit-test
  terraform-apply:
    description: Apply Terraform project
    group: infra
    run:
      container: infra
      command: /code/infra/run.sh
      working_directory: /code/infra/project
      environment:
        TF_VAR_env: ${ENVIRONMENT:-dev}
        TERRAFORM_DIR: /code/infra/project
  terraform-destroy:
    description: Destroy Terraform project
    group: infra
    run:
      container: infra
      command: /code/infra/run.sh
      working_directory: /code/infra/project
      environment:
        TF_VAR_env: ${ENVIRONMENT:-dev}
        TERRAFORM_DIR: /code/infra/project
        TF_OPERATION: destroy
  app-serve:
    description: Serve app locally
    group: app
    run:
      container: hugo
      command: server --bind 0.0.0.0 --disableFastRender
      ports:
        - 1313:1313
  app-build:
    description: Build app
    group: app
    run:
      container: hugo
  app-deploy:
    description: Deploy app
    group: app
    prerequisites:
      - app-build
    run:
      container: aws-cli
      command: /code/app/deploy.sh
      working_directory: /code/app
      environment:
        ENVIRONMENT: ${ENVIRONMENT:-dev}